CREATE OR REPLACE PROCEDURE UPD_JOBSAL (J_ID VARCHAR,MIN_SAL EMPLOYEES.SALARY%TYPE,MAX_SAL EMPLOYEES.SALARY%TYPE) AS
INVALID_JOB EXCEPTION;
SALARY_ERROR EXCEPTION;
ROW_LOCKED EXCEPTION;
PRAGMA EXCEPTION_INIT(row_locked,-54);
PRAGMA EXCEPTION_INIT(SALARY_ERROR,-100);
PRAGMA EXCEPTION_INIT(INVALID_JOB,-200);
L_COUNT1 NUMBER(2):=0;

BEGIN
FOR C1 IN(SELECT * FROM JOBS WHERE JOB_ID=J_ID FOR UPDATE NOWAIT)LOOP
NULL;
END LOOP;

SELECT COUNT(*) INTO L_COUNT1 FROM JOBS WHERE JOB_ID=J_ID;


IF MAX_SAL<MIN_SAL THEN
RAISE
SALARY_ERROR;
END IF;


IF(L_COUNT1=0) THEN
RAISE INVALID_JOB;
ELSE
UPDATE
JOBS
SET
MIN_SALARY=MIN_SAL,
MAX_SALARY=MAX_SAL
WHERE
JOB_ID=J_ID;
COMMIT;
END IF;


EXCEPTION
WHEN ROW_LOCKED THEN
DBMS_OUTPUT.PUT_LINE(sqlcode||':'||'this row is locked......');

WHEN SALARY_ERROR THEN
ROLLBACK;
DBMS_OUTPUT.PUT_LINE(sqlcode||':'||'MAXIMUM SALARY CANNOT BE LESS THAN THE MINIMUM SALARY');

WHEN INVALID_JOB THEN
DBMS_OUTPUT.PUT_LINE(sqlcode||':'||'JOB INVALID');
END;
